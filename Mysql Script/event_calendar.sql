
SET FOREIGN_KEY_CHECKS = 0;

# CREATE DATABASE 
CREATE DATABASE event_calendar
	CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;

USE event_calendar;

# USERS TABLE
DROP TABLE IF EXISTS users;
CREATE TABLE users (
    id INTEGER NOT NULL AUTO_INCREMENT COMMENT'PRIMARY ID',
    name VARCHAR(100) NOT NULL COMMENT'USER NAME',
    email VARCHAR(100) UNIQUE NOT NULL COMMENT'USER EMAIL',
    password VARCHAR(255) NOT NULL COMMENT'USER PASSWORD',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT'USER CREATED TIMESTAMP',
    updated_at TIMESTAMP NULL COMMENT'USER MODIFIED TIMESTAMP',
    deleted_at TIMESTAMP NULL COMMENT'USER DELETED TIMESTAMP',
    status TINYINT NOT NULL DEFAULT 1 COMMENT'0- Inactive,1- Active,2- Deleted',
    CONSTRAINT PK_USER_ID PRIMARY KEY(id),
    KEY IDX_USER_EMAIL(email)
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT ='TABLE TO STORE THE USER DETAILS';

# EVENTS TABLE
DROP TABLE IF EXISTS events;
CREATE TABLE events (
    evnt_id INTEGER NOT NULL AUTO_INCREMENT COMMENT'EVENT TABLE PRIMARY ID',
    evnt_user_id INTEGER NULL COMMENT'FK: FK_EVNT_USER_ID REFER USERS(ID)',
    evnt_name VARCHAR(255) NOT NULL COMMENT'EVENT NAME',
    evnt_title VARCHAR(255) NOT NULL COMMENT'EVENT TITLE',
    evnt_desc TEXT NULL COMMENT'EVENT DESCRIPTION',
    evnt_date DATE NOT NULL COMMENT'EVENT DATE',
    evnt_start_time TIME NOT NULL COMMENT'EVENT START TIME',
    evnt_end_time TIME NOT NULL COMMENT'EVENT END TIME',
    evnt_location VARCHAR(255) NOT NULL COMMENT'EVENT LOCATION',
    evnt_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT'EVENT CREATED TIMESTAMP',
    evnt_modified TIMESTAMP NULL COMMENT'EVENT MODIFIED TIMESTAMP',
    evnt_status TINYINT NOT NULL DEFAULT 1 COMMENT'0- Inactive,1- Active,2- Deleted',
    CONSTRAINT PK_EVNT_ID PRIMARY KEY(evnt_id),
    CONSTRAINT FK_EVNT_USER_ID FOREIGN KEY(evnt_user_id) REFERENCES users(id) ON DELETE SET NULL,
    KEY IDX_EVNT_DATE(evnt_date)
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT ='TABLE TO STORE THE EVENT DETAILS';

# RECURRING EVENTS TABLE
DROP TABLE IF EXISTS recurring_events;
CREATE TABLE recurring_events (
    recur_id INTEGER NOT NULL AUTO_INCREMENT COMMENT'RECURRING EVENT PRIMARY ID',
    recur_evnt_id INTEGER NOT NULL COMMENT'FK: FK_RECUR_EVNT_ID REFER EVENTS(EVNT_ID)',
    recur_type ENUM('daily', 'weekly', 'monthly') DEFAULT 'monthly' COMMENT'RECURRING TYPES',
    recur_repeat_until DATE COMMENT'RECURRING EVENT TILL DATE',
    recur_status TINYINT NOT NULL DEFAULT 1 COMMENT'0- Inactive,1- Active,2- Deleted',
    CONSTRAINT PK_RECUR_ID PRIMARY KEY(recur_id),
    CONSTRAINT FK_RECUR_EVNT_ID FOREIGN KEY(recur_evnt_id) REFERENCES events(evnt_id)
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='TABLE TO STORE THE RECURRING EVENT DETAILS';

DROP TABLE IF EXISTS holidays;
CREATE TABLE holidays (
    hldy_id INTEGER AUTO_INCREMENT COMMENT'HOLIDAY PRIMARY ID',
    hldy_holiday_name VARCHAR(255) NOT NULL COMMENT'HOLIDAY NAME',
    hldy_holiday_date DATE NOT NULL COMMENT'HOLIDAY DATE',
    hldy_holiday_year INTEGER GENERATED ALWAYS AS (YEAR(hldy_holiday_date)) STORED COMMENT'YEAR',
    hldy_created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT'CREATED DATE',
    hldy_modified TIMESTAMP NULL COMMENT'MODIFIED DATE',
    hldy_status TINYINT NOT NULL DEFAULT 1 COMMENT'0-Inactive,1- Active,2- Deleted',
    CONSTRAINT PK_HLDY_ID PRIMARY KEY(hldy_id),
    UNIQUE (hldy_holiday_date, hldy_holiday_year)
)ENGINE=InnoDB CHARSET=utf8mb4 COMMENT'TABLE TO STORE THE HOLIDAY LISTS';

INSERT INTO holidays (hldy_holiday_date, hldy_holiday_name) VALUES
('2025-01-01', 'New Year'),
('2025-01-26', 'Republic Day'),
('2025-05-01', 'Labour Day'),
('2025-08-15', 'Independence Day'),
('2025-10-02', 'Gandhi Jayanti'),
('2025-12-25', 'Christmas'),
('2025-07-01', 'Founders Day'),
('2025-07-04', 'Company Annual Holiday');
COMMIT;

SET FOREIGN_KEY_CHECKS = 0;